require "epzip"
require "fileutils"

##############
desc "testing"
task :test do
    
    @list = Dir.entries("Images")
    puts ("#{@list}")
end
    


##############
#   Build    #
##############

# Generate the site
# Minify, optimize, and compress

desc "build the site"
task :build do
    
  #Build our HTML files
  system "bundle exec jekyll build"
    
  #Use the epzip gem to create our epubs
  Dir.glob('_site/*') do |dir|
    system "epzip", dir
  end
  
  #Use KindleGen to create a mobi file from our epubs
  Dir.glob('_site/*{epub}') do |file|
    system "kindlegen", "-c1", file
  end

  #Use Pandoc to convert to PDF
end

# Thanks to http://albertogrespan.com/blog/rake-tasks-and-jekyll-posts/ for the basis of the code below
# Create scaffolding for your book.

# bundle exec rake new:book

namespace :new do
  desc "Creating scaffolding for a new book"
  task :book do
      
# Get book name from user input
    puts "What's the title of your book?"
    @name = STDIN.gets.chomp
    
# Use book name to as our slug for naming stuff
    @slug = "#{@name}"
    @slug = @slug.tr('ÁáÉéÍíÓóÚú', 'AaEeIiOoUu')
    @slug = @slug.downcase.strip.gsub(' ', '-')
    @post_date = Time.now.strftime("%F")

# Create our scaffolding    
    FileUtils::mkdir_p ("#{@slug}") 
    FileUtils.mkdir("_posts/#{@slug}")
    FileUtils.mkdir("_includes/#{@slug}")
    FileUtils.mkdir("_data/#{@slug}")
    FileUtils.cp_r '_epub_scaffolding/.', ("#{@slug}")

    @uuid = SecureRandom.uuid
    
    FileUtils.touch("_data/#{@slug}/uuid.yml")
    open("_data/#{@slug}/uuid.yml", 'a' ) do |file|
      file.puts "- uuid: '#{@uuid}'"
    end
    
###########
    
    FileUtils.touch("#{@slug}/OEBPS/toc.ncx")
    open("#{@slug}/OEBPS/toc.ncx", 'a' ) do |file|
      file.puts '<?xml version="1.0" encoding="UTF-8" standalone="no" ?>'
      file.puts '<!DOCTYPE ncx PUBLIC "-//NISO//DTD ncx 2005-1//EN"'
      file.puts ' "http://www.daisy.org/z3986/2005/ncx-2005-1.dtd">'
      file.puts '<ncx xmlns="http://www.daisy.org/z3986/2005/ncx/" version="2005-1">'
      file.puts '    <head>'
      file.puts "        <meta content=\"urn:uuid:#{@uuid}\" name=\"dtb:uid\"/>"
      file.puts '        <meta content="1" name="dtb:depth"/>'
      file.puts '        <meta content="0" name="dtb:totalPageCount"/>'
      file.puts '        <meta content="0" name="dtb:maxPageNumber"/>'
      file.puts '</head>'
      file.puts '<docTitle>'
      file.puts "        <text>#{@name}</text>"
      file.puts '</docTitle>'
      file.puts '<navMap>'
      file.puts '        <navPoint id="navPoint-1" playOrder="1">'
      file.puts '            <navLabel>'
      file.puts "                <text>#{@name}</text>"
      file.puts '            </navLabel>'
      file.puts '            <content src="Text/Chapter01.html"/>'
      file.puts '        </navPoint>'
      file.puts '        <navPoint id="navPoint-2" playOrder="2">'
      file.puts '            <navLabel>'
      file.puts '                <text>ABOUT THE AUTHOR</text>'
      file.puts '            </navLabel>'
      file.puts '            <content src="Text/About.html"/>'
      file.puts '        </navPoint>'
      file.puts '    </navMap>'
      file.puts '</ncx>'
    end
    
    FileUtils.touch("#{@slug}/OEBPS/content.opf")
    open("#{@slug}/OEBPS/content.opf", 'a' ) do |file|
      file.puts "---"
      file.puts "---"
      file.puts '<?xml version="1.0" encoding="utf-8" standalone="yes"?>'
      file.puts '<package xmlns="http://www.idpf.org/2007/opf" unique-identifier="BookId" version="2.0">'
      file.puts '  <metadata xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:opf="http://www.idpf.org/2007/opf">'
      file.puts "    <dc:identifier id=\"BookId\" opf:scheme=\"UUID\">urn:UUID:#{@uuid}</dc:identifier>"
      file.puts '    <dc:title>{% for book in site.data.book %}{{ book.title }}{% endfor %}</dc:title>'
      file.puts '    <dc:creator opf:role="aut">{% for book in site.data.book %}{{ book.author }}{% endfor %}</dc:creator>'
      file.puts '    <dc:language>{% for book in site.data.book %}{{ book.language }}{% endfor %}</dc:language>'
      file.puts '    <dc:publisher>{% for book in site.data.book %}{{ book.publisher }}{% endfor %}</dc:publisher>'
      file.puts '    <dc:subject>{% for book in site.data.book %}{{ book.genre }}{% endfor %}</dc:subject>'
      file.puts '    <dc:rights>{% for book in site.data.book %}{{ book.license }}{% endfor %}</dc:rights>'
      file.puts "    <dc:date opf:event=\"publication\">#{@post_date}</dc:date>"
      file.puts "    <meta name=\"Cover\" content=\"#{@slug}-cover.jpg\" />"
      file.puts '  </metadata>'
      file.puts '  <manifest>'
      file.puts '    <item href="toc.ncx" id="ncx" media-type="application/x-dtbncx+xml" />'
      file.puts '    <item href="Text/License.html" id="License.html" media-type="application/xhtml+xml" />'
      file.puts '    <item href="Styles/epub.css" id="epub.css" media-type="text/css" />'
      file.puts '    <item href="Text/TOC.xhtml" id="TOC.xhtml" media-type="application/xhtml+xml" />'
      file.puts '    <item href="Text/Chapter01.html" id="Chapter01.html" media-type="application/xhtml+xml" />'
      file.puts '    <item href="Text/About.html" id="About.html" media-type="application/xhtml+xml" />'
      file.puts '    <item href="Text/Title-Page.html" id="Title-Page.html" media-type="application/xhtml+xml" />'
      file.puts "    <item href=\"Images/#{@slug}-cover.jpg\" id=\"#{@slug}-cover.jpg\" media-type=\"image/jpeg\" />"
      file.puts '    <item href="Text/Cover.html" id="Cover.html" media-type="application/xhtml+xml" />'
      file.puts '  </manifest>'
      file.puts '  <spine toc="ncx">'
      file.puts '    <itemref idref="Cover.html" />'
      file.puts '    <itemref idref="Title-Page.html" />'
      file.puts '    <itemref idref="Chapter01.html" />'
      file.puts '    <itemref idref="About.html" />'
      file.puts '    <itemref idref="License.html" />'
      file.puts '    <itemref idref="TOC.xhtml" />'
      file.puts '  </spine>'
      file.puts '  <guide>'
      file.puts '    <reference href="Text/Title-Page.html" title="Title Page" type="title-page" />'
      file.puts '    <reference href="Text/TOC.xhtml" title="Table Of Contents" type="toc" />'
      file.puts '    <reference href="Text/Cover.html" title="Cover" type="cover" />'
      file.puts '  </guide>'
      file.puts '</package>' 
    end
    
    FileUtils.touch("#{@slug}/OEBPS/Text/TOC.xhtml")
    open("#{@slug}/OEBPS/Text/TOC.xhtml", 'a' ) do |file|
      file.puts "---"
      file.puts "---"
      file.puts '<?xml version="1.0" encoding="utf-8" standalone="no"?>'
      file.puts '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"'
      file.puts '  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'

      file.puts '<html xmlns="http://www.w3.org/1999/xhtml">'
      file.puts '<head>'
      file.puts '  <title>Table of Contents</title>'
      file.puts '  <link href="../Styles/epub.css" rel="stylesheet" type="text/css" />'
      file.puts '</head>'
      file.puts '<body>'
      file.puts '  <div>'
      file.puts '    Table of Contents'
      file.puts '  </div>'

      file.puts '  <div>'
      file.puts "    <a href=\"../Text/Chapter01.html\">#{@name}</a>"
      file.puts '  </div>'

      file.puts '  <div>'
      file.puts '    <a href="../Text/About.html">ABOUT THE AUTHOR</a>'
      file.puts '  </div>'
      file.puts '</body>'
      file.puts '</html>'
    end
    
        FileUtils.touch("#{@slug}/OEBPS/Text/Cover.html")
    open("#{@slug}/OEBPS/Text/Cover.html", 'a' ) do |file|
      file.puts '<?xml version="1.0" encoding="utf-8" standalone="no"?>'
      file.puts '<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"'
      file.puts '  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">'

      file.puts '<html xmlns="http://www.w3.org/1999/xhtml">'
      file.puts '<head>'
      file.puts '  <title>Cover</title>'
      file.puts '  <link href="../Styles/epub.css" rel="stylesheet" type="text/css" />'
      file.puts '</head>'

      file.puts '<body>'
      file.puts '<div style="text-align: center; padding: 0pt; margin: 0pt;">'
      file.puts "    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" preserveAspectRatio=\"xMidYMid meet\" version=\"1.1\" viewBox=\"0 0 700 1120\" width=\"100%\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><image height=\"1120\" width=\"700\" xlink:href=\"../Images/#{@slug}-cover.jpg\" /></svg>"
      file.puts '</div></body>'
      file.puts '</html>'
    end
###########
    
# Create our "posts"    
    
    FileUtils.touch("_posts/#{@slug}/#{@post_date}-Title-Page.md")
    FileUtils.touch("_includes/#{@slug}/title-page.md")
    open("_posts/#{@slug}/#{@post_date}-Title-Page.md", 'a' ) do |file|
      file.puts "---"
      file.puts "title: Title Page"
      file.puts "layout: default"
      file.puts "permalink: #{@slug}/OEBPS/Text/Title-Page.html"
      file.puts "## ################################### ##"
      file.puts "## Don't edit anything above this line ##"
      file.puts "## ################################### ##"
      file.puts "category: #{@slug}"
      file.puts "date: #{@post_date}"
      file.puts "bibliography: #yes to include other works specified in _data/bibliography.yml"
      file.puts "---"
      file.puts "{% include #{@slug}/title-page.md %}"
    end
    
    FileUtils.touch("_posts/#{@slug}/#{@post_date}-Chapter01.md")
    FileUtils.touch("_includes/#{@slug}/chapter-01.md")
    open("_posts/#{@slug}/#{@post_date}-Chapter01.md", 'a' ) do |file|
      file.puts "---"
      file.puts "title: #{@name}"
      file.puts "layout: default"
      file.puts "permalink: #{@slug}/OEBPS/Text/Chapter01.html"
      file.puts "## ################################### ##"
      file.puts "## Don't edit anything above this line ##"
      file.puts "## ################################### ##"
      file.puts "category: #{@slug}"
      file.puts "date: #{@post_date}"
      file.puts "---"
      file.puts "{% include #{@slug}/chapter-01.md %}"
    end

    FileUtils.touch("_posts/#{@slug}/#{@post_date}-About.md")
    FileUtils.touch("_includes/#{@slug}/bio.md")
    open("_posts/#{@slug}/#{@post_date}-About.md", 'a' ) do |file|
      file.puts "---"
      file.puts "title: About"
      file.puts "layout: default"
      file.puts "permalink: #{@slug}/OEBPS/Text/About.html"
      file.puts "## ################################### ##"
      file.puts "## Don't edit anything above this line ##"
      file.puts "## ################################### ##"
      file.puts "category: #{@slug}"
      file.puts "date: #{@post_date}"
      file.puts "---"
      file.puts "{% include #{@slug}/bio.md %}"
    end
    
    FileUtils.touch("_posts/#{@slug}/#{@post_date}-License.md")
    FileUtils.touch("_includes/#{@slug}/license.md")
    open("_posts/#{@slug}/#{@post_date}-License.md", 'a' ) do |file|
      file.puts "---"
      file.puts "title: License"
      file.puts "layout: default"
      file.puts "permalink: #{@slug}/OEBPS/Text/License.html"
      file.puts "## ################################### ##"
      file.puts "## Don't edit anything above this line ##"
      file.puts "## ################################### ##"
      file.puts "category: #{@slug}"
      file.puts "date: #{@post_date}"
      file.puts "---"
      file.puts "{% include #{@slug}/license.md %}"
    end
    
  end
end

# bundle exec rake new:chapter
namespace :new do
  desc "Creating a new chapter for an existing book"
  task :chapter do
    
    puts "What book are you creating a new chapter for?"
    @name = STDIN.gets.chomp
    @slug = "#{@name}"
    @slug = @slug.tr('ÁáÉéÍíÓóÚú', 'AaEeIiOoUu')
    @slug = @slug.downcase.strip.gsub(' ', '-')
    #ruby append specific line to text file
    puts "What chapter number do you want to create?"
    @chapter = STDIN.gets.chomp
    @chap = "#{@chapter}"#{@slug}
    @chap = @chap.tr('ÁáÉéÍíÓóÚú', 'AaEeIiOoUu')
    @chap = @chap.downcase.strip.gsub(' ', '-')
    
    @post_date = Time.now.strftime("%F")
    
    FileUtils.touch("_posts/#{@slug}/#{@post_date}-#{@chap}.md")
    FileUtils.touch("_includes/#{@slug}/chapter-#{@chap}.md")
    open("_posts/#{@slug}/#{@post_date}-#{@chap}.md", 'a' ) do |file|
      file.puts "---"
      file.puts "title: #{@name}"
      file.puts "layout: default"
      file.puts "permalink: #{@slug}/OEBPS/Text/Chapter#{@chap}.html"
      file.puts "## ################################### ##"
      file.puts "## Don't edit anything above this line ##"
      file.puts "## ################################### ##"
      file.puts "category: #{@slug}"
      file.puts "date: #{@post_date}"
      file.puts "---"
      file.puts "{% include #{@slug}/chapter-#{@chap}.md %}"
    end
    
  end
end

namespace :new do
  desc "Creating a new (non-chapter) page for an existing book, such as front-matter or back-matter"
  task :page do
    
    puts "What book are you creating a new page for?"
    @name = STDIN.gets.chomp
    @slug = "#{@name}"
    @slug = @slug.tr('ÁáÉéÍíÓóÚú', 'AaEeIiOoUu')
    @slug = @slug.downcase.strip.gsub(' ', '-')
    
    puts "What page do you want to create?"
    @page = STDIN.gets.chomp
    @npage = "#{@page}"
    @npage = @npage.tr('ÁáÉéÍíÓóÚú', 'AaEeIiOoUu')
    @npage = @npage.downcase.strip.gsub(' ', '-')
    
    @post_date = Time.now.strftime("%F")
    
    FileUtils.touch("_posts/#{@slug}/#{@post_date}-#{@npage}.md")
    FileUtils.touch("_includes/#{@slug}/#{@npage}.md")
    open("_posts/#{@slug}/#{@post_date}-#{@npage}.md", 'a' ) do |file|
      file.puts "---"
      file.puts "title: #{@npage}"
      file.puts "layout: default"
      file.puts "permalink: #{@slug}/OEBPS/Text/#{@npage}.html"
      file.puts "## ################################### ##"
      file.puts "## Don't edit anything above this line ##"
      file.puts "## ################################### ##"
      file.puts "category: #{@slug}"
      file.puts "date: #{@post_date}"
      file.puts "---"
      file.puts "{% include #{@slug}/#{@npage}.md %}"
    end
    
  end
end

# bundle exec rake delete:book
namespace :delete do
  desc "Remove all evidence of a book created with the new:book command"
  task :book do
    
    puts "What book are you deleting?"
    @name = STDIN.gets.chomp
    @slug = "#{@name}"
    @slug = @slug.tr('ÁáÉéÍíÓóÚú', 'AaEeIiOoUu')
    @slug = @slug.downcase.strip.gsub(' ', '-')
            
    FileUtils.rm_r("#{@slug}")
    FileUtils.rm_r("_posts/#{@slug}")
    FileUtils.rm_r("_includes/#{@slug}")
    FileUtils.rm_r("_data/#{@slug}")
    
  end
end
